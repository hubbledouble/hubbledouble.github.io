{"version":3,"sources":["components/libraries/MergePatch.md","components/libraries/ProcessSynchronization.md","components/home/HomePage.js","components/common/NavHeader.js","components/common/Footer.js","components/libraries/CodeBlock.js","components/common/Spinner.js","components/libraries/ReadMe.js","App.js","index.js"],"names":["module","exports","HomePage","src","overlay","className","direction","in","mountOnEnter","unmountOnExit","type","duration","React","Component","NavHeader","useState","collapse","isWideEnough","state","setState","style","backgroundColor","fluid","color","dark","expand","href","onClick","isOpen","navbar","left","to","Footer","Date","getFullYear","CodeBlock","props","language","value","atomDark","SpinnerPage","role","position","top","ReadMe","terms","loading","fetch","this","readme","then","response","text","minHeight","Spinner","paddingTop","source","renderers","code","App","path","exact","component","mergePatchReadMe","processSynchronizationReadMe","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5a187e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MergePatch.1b21b57d.md\";","module.exports = __webpack_public_path__ + \"static/media/ProcessSynchronization.931201a0.md\";","import React from \"react\";\r\nimport { MDBMask, MDBView } from \"mdbreact\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport { MDBAnimation } from \"mdbreact\";\r\n\r\nclass HomePage extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MDBView src=\"images/nasa-Q1p7bh3SHj8-unsplash.jpg\">\r\n          <MDBMask\r\n            overlay=\"black-strong\"\r\n            className=\"flex-center flex-column text-white text-center\"\r\n          >\r\n            <Slide direction=\"right\" in={true} mountOnEnter unmountOnExit>\r\n              <div>\r\n                <MDBAnimation type=\"zoomInUp\" duration=\"500ms\">\r\n                  <h1>HUBBLEDOUBLE</h1>\r\n                  <p>Tools for Cyberspace</p>\r\n                </MDBAnimation>\r\n              </div>\r\n            </Slide>\r\n          </MDBMask>\r\n        </MDBView>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavItem,\r\n  MDBNavLink,\r\n  MDBContainer,\r\n} from \"mdbreact\";\r\nimport { WiMoonWaningCrescent5, WiMoonWaxingCrescent1 } from \"react-icons/wi\";\r\n\r\nconst NavHeader = () => {\r\n  const [state, setState] = useState({\r\n    collapse: false,\r\n    isWideEnough: false,\r\n  });\r\n\r\n  function onClick() {\r\n    setState({ collapse: !state.collapse });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <MDBContainer style={{ backgroundColor: \"black\" }} fluid>\r\n        <MDBContainer>\r\n          <MDBNavbar color=\"black\" dark expand=\"md\">\r\n            <MDBNavbarBrand href=\"/\">HubbleDouble.com</MDBNavbarBrand>\r\n            {!state.isWideEnough && <MDBNavbarToggler onClick={onClick} />}\r\n            <MDBCollapse isOpen={state.collapse} navbar>\r\n              <MDBNavbarNav left>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"/json-merge\">\r\n                    <WiMoonWaningCrescent5 /> merge & patch{\" \"}\r\n                    <WiMoonWaxingCrescent1 />\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem>\r\n                  <MDBNavLink to=\"/thread-sync\">\r\n                    <WiMoonWaningCrescent5 />\r\n                    process synchronization <WiMoonWaxingCrescent1 />\r\n                  </MDBNavLink>\r\n                </MDBNavItem>\r\n              </MDBNavbarNav>\r\n            </MDBCollapse>\r\n          </MDBNavbar>\r\n        </MDBContainer>\r\n      </MDBContainer>\r\n    </div>\r\n  );\r\n};\r\nexport default NavHeader;\r\n","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <MDBFooter\r\n      color=\"elegant-color-dark\"\r\n      className=\"font-small position-relative\"\r\n    >\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()}\r\n          <a href=\"https://www.jorgesaldivar.com\">\r\n            {\" \"}\r\n            JorgeSaldivar.com. All rights reserved.{\" \"}\r\n          </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\r\n\r\nconst CodeBlock = (props) => {\r\n  const { language, value } = props;\r\n  return (\r\n    <SyntaxHighlighter language={language} style={atomDark}>\r\n      {value}\r\n    </SyntaxHighlighter>\r\n  );\r\n};\r\n\r\nexport default CodeBlock;\r\n","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"spinner-border\"\r\n        role=\"status\"\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"50%\",\r\n          top: \"50%\",\r\n        }}\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SpinnerPage;\r\n","import React, { Component } from \"react\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport { MDBContainer, MDBJumbotron, MDBCol } from \"mdbreact\";\r\nimport CodeBlock from \"./CodeBlock\";\r\nimport { Collapse, Paper } from \"@material-ui/core\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { Slide } from \"@material-ui/core\";\r\nimport { Jumbotron } from \"react-bootstrap\";\r\nimport { MDBMask, MDBView } from \"mdbreact\";\r\nimport { MDBAnimation } from \"mdbreact\";\r\n\r\nclass ReadMe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { terms: null, loading: true };\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch(this.props.readme)\r\n      .then((response) => response.text())\r\n      .then((text) => {\r\n        this.setState({ terms: text, loading: false });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const container = {\r\n      color: \"white\",\r\n      minHeight: \"100vh\",\r\n    };\r\n\r\n    return (\r\n      <MDBContainer fluid className=\"elegant-color-dark\">\r\n        <MDBContainer>\r\n          <br />\r\n          <MDBAnimation type=\"slideInUp\" duration=\"200ms\">\r\n            <MDBCol className=\"z-depth-5  elegant-color\" style={container}>\r\n              {this.state.loading ? (\r\n                <Spinner />\r\n              ) : (\r\n                <div style={{ paddingTop: \"20px\" }}>\r\n                  <ReactMarkdown\r\n                    source={this.state.terms}\r\n                    renderers={{ code: CodeBlock }}\r\n                  />\r\n                </div>\r\n              )}\r\n              <br />\r\n            </MDBCol>\r\n          </MDBAnimation>\r\n        </MDBContainer>\r\n        <br />\r\n      </MDBContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReadMe;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { Route } from \"react-router-dom\";\r\nimport HomePage from \"./components/home/HomePage\";\r\nimport NavHeader from \"./components/common/NavHeader\";\r\nimport Footer from \"./components/common/Footer\";\r\nimport ReadMe from \"./components/libraries/ReadMe\";\r\nimport mergePatchReadMe from \"./components/libraries/MergePatch.md\";\r\nimport processSynchronizationReadMe from \"./components/libraries/ProcessSynchronization.md\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <NavHeader />\r\n      <Route path=\"/\" exact component={HomePage} />\r\n      <Route\r\n        path=\"/json-merge\"\r\n        component={() => <ReadMe readme={mergePatchReadMe} />}\r\n      />\r\n      <Route\r\n        path=\"/thread-sync\"\r\n        component={() => <ReadMe readme={processSynchronizationReadMe} />}\r\n      />\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}